type Configuration {
	Security: SecurityConfiguration
	Mail: MailConfiguration
	Server: ServerConfiguration
}

input VerifyDatabaseConnectionArgs {
	provider: String!
	serverAddress: String!
	serverPort: String!
	databaseName: String!
	adminUsername: String!
	adminPassword: String!
}

input SecurityConfigurationInput {
	passwordRequiresLowercase: Boolean!
	passwordRequiresUppercase: Boolean!
	passwordRequiresNumber: Boolean!
	passwordRequiresSymbol: Boolean!
	passwordMinimumLength: Int!
	multifactorRequired: Boolean!
	accessTokenExpirationSeconds: Int!
}

input MailConfigurationInput {
	serverAddress: String!
	username: String!
	password: String!
	port: Int!
	fromAddress: String!
}

input ServerConfigurationInput {
	baseUrl: String!
	realmName: String!
}

input SaveConfigurationArgs {
	Security: SecurityConfigurationInput
	Mail: MailConfigurationInput
	Server: ServerConfigurationInput
}


type ConfigurationMeta {
	count: Int!
}





type Query {
	configuration: Configuration 
}

type Mutation {
	verifyDatabaseConnection(data: VerifyDatabaseConnectionArgs!): OperationResponse 
	saveConfiguration(data: SaveConfigurationArgs!): OperationResponse 
}

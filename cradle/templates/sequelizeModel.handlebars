import Sequelize from 'sequelize'
import { SequelizeAttributes } from '../../types/SequelizeAttributes'
import { I{{Name}} } from './I{{Name}}'
{{#each (getDistinctObjects Properties) as |p|}}
{{#isArray p.TypeName}}
{{#if p.MemberType.ModelName}}
import { I{{p.MemberType.ModelName}}, {{p.MemberType.ModelName}} } from './{{p.MemberType.ModelName}}'
{{/if}}
{{/isArray}}
{{#isObject p}}
import { I{{p.ModelName}}, {{p.ModelName}} } from './{{p.ModelName}}'
{{/isObject}}
{{/each}}

export type {{Name}}Instance = Sequelize.Instance<I{{Name}}> & I{{Name}}

function {{Name}}Factory(sequelize: Sequelize.Sequelize) {
  const attributes: SequelizeAttributes<I{{Name}}> = {
    {{#each Properties as |prop|}}
    {{#if prop.AllowNull }}
    {{#isArray TypeName}}
    {{!-- {{#if prop.MemberType.ModelName}}
    {{prop.Name}}?: List<{{prop.MemberType.ModelName}}>,
    {{else}}
    {{prop.Name}}?: List<Sequelize.{{prop.MemberType.TypeName}}>,
    {{/if}} --}}
    {{/isArray}}
    {{#isObject prop}}
    {{!-- {{prop.Name}}?: {{prop.ModelName}}, --}}
    {{/isObject}}
    {{#isBaseDataType prop}}
    {{prop.Name}}: {
      allowNull: true,
      type: Sequelize.{{prop.TypeName}}{{#if prop.MaximumLength}}({{prop.MaximumLength}}){{/if}}
    },
    {{/isBaseDataType}}
    {{else}}
    {{#isArray TypeName}}
    {{!-- {{#if prop.MemberType.ModelName}}
    {{prop.Name}}: List<{{prop.MemberType.ModelName}}>,
    {{else}}
    {{prop.Name}}: List<Sequelize.{{prop.MemberType.TypeName}}>,
    {{/if}} --}}
    {{/isArray}}
    {{#isObject prop}}
    {{!-- {{prop.Name}}: {{prop.ModelName}}, --}}
    {{/isObject}}
    {{#isBaseDataType prop}}
    {{prop.Name}}: {
      {{#if prop.IsPrimaryKey}}
      primaryKey: true,
      {{/if}}
      {{#isAutogenerated prop.Autogenerate}}
      autoIncrement: true,
      {{/isAutogenerated}}
      {{#if prop.Unique}}
      unique: {{{getUniqueValue prop.Unique}}},
      {{/if}}
      {{#hasDefaultValue prop}}
      defaultValue: {{{prop.DefaultValue}}},
      {{/hasDefaultValue}}
      type: Sequelize.{{prop.TypeName}}{{#if prop.MaximumLength}}({{prop.MaximumLength}}){{/if}}
    },
    {{/isBaseDataType}}
    {{/if}}
    {{/each}}
  }
  return sequelize.define<{{Name}}Instance, I{{Name}}>('{{Name}}', attributes, {
    timestamps: true,
    paranoid: true,
  })
}

export default {{Name}}Factory
